{
  "openapi": "3.0.3",
  "info":{
    "title": "Travel.r API",
    "description": "Celfocus Academy 2023 | Travel.r API",
    "version": "1.0.0"
  },
  "consumes": [ "application/json" ],
  "produces": [ "application/json" ],
  "basePath": "/",
  "schemes": ["http"],
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development Server"
    },
    {
      "url": "http://travelr-backend.cfappsecurity.com",
      "description": "Production Server"
    }
  ],
  "tags": [
    {
      "name": "auth",
      "description": "Authentication operations"
    },
    {
      "name": "user",
      "description": "User CRUD operations"
    },
    {
      "name": "trip",
      "description": "Trip CRUD operations"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user into the system",
        "requestBody": {
          "required": true,
          "content":{
            "application/json": {
              "schema":{
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "identificationDoc": {
                    "type": "string"
                  },
                  "vaccination": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [ "auth" ]
      }
    },
    "/auth/login": {
      "get": {
        "summary": "Checks for credentials and returns the corresponding User ID, resulting in a login",
        "requestBody": {
          "required": true,
          "content":{
            "application/json": {
              "schema":{
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [ "auth" ]
      }
    },
    "/user": {
      "get": {
        "summary": "Returns the data for all users",
        "tags": ["user"]
      },
      "post": {
        "summary": "Creates a new user with the specified parameters",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "tags": ["user"]
      }
    },
    "/user/:id" : {
      "get": {
        "summary": "Returns the data for the user with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the User"
          }
        ],
        "tags": ["user"]
      },
      "patch": {
        "summary": "Modifies the specified fields of the user with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the User"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "tags": ["user"]
      },
      "delete": {
        "summary": "Deletes the user with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the User"
          }
        ],
        "tags": ["user"]
      }
    },
    "/trip": {
      "get": {
        "summary": "Returns the data for all trips",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the User"
          }
        ],
        "tags": ["trip"]
      },
      "post" :{
        "summary": "Creates a new trip with the specified data",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trip"
              }
            }
          }
        },
        "tags": ["trip"]
      }
    },
    "/trip/:id": {
      "get": {
        "summary": "Returns the data for the trip with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the Trip"
          }
        ],
        "tags": ["trip"]
      },
      "patch": {
        "summary": "Modifies the specified fields of the trip with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the Trip"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Trip"
              }
            }
          }
        },
        "tags": ["trip"]
      },
      "delete": {
        "summary": "Deletes the trip with the corresponding ID, if it exists",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": "true",
            "description": "Object ID of the Trip"
          }
        ],
        "tags": ["trip"]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties":{
          "_id": {
            "type": "string",
            "description": "Object ID"
          },
          "username": {
            "type": "string",
            "description": "User's username, used for authentication"
          },
          "password": {
            "type": "string",
            "description": "The user's password - plaintext on the client-side, hashed on the database"
          },
          "name": {
            "type": "string",
            "description": "The user's first and last name"
          },
          "identificationDoc": {
            "type": "string",
            "description": "The user's personal identification documents, in text form"
          },
          "vaccination": {
            "type": "string",
            "description": "The user's current vaccination booklet, in text form"
          }
        }
      },
      "Trip": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Object ID"
          },
          "name": {
            "type": "string",
            "description": "The trip's name"
          },
          "description": {
            "type": "string",
            "description": "The trip's description, with more detailed information"
          },
          "startDate": {
            "type": "string",
            "description": "Date of the start of the trip"
          },
          "currency": {
            "type": "string",
            "description": "A small code for the destination country's currency"
          },
          "timeZone": {
            "type": "string",
            "description": "A small identifier for the destination's timezone"
          },
          "emergencyNumber" : {
            "type": "number",
            "description": "The destination country's general number for emergency services"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "attendees": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "user": {
                  "$ref": "#/components/schemas/User"
                },
                "ticket": {
                  "type": "string",
                  "description": "The ticket code"
                },
                "reservation": {
                  "type": "string",
                  "description": "The reservation code"
                }
              }
            }
          },
          "status": {
            "type": "boolean",
            "description": "is this trip still active or not"
          },
          "itenerary": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the Point of Interest"
                },
                "description": {
                  "type": "string",
                  "description": "Description of that Point of Interest"
                },
                "date": {
                  "type": "string",
                  "description": "Date/hour planed to enter in the Point of Interest"
                }
              }
            }
          }
        }
      }
    }
  }
}
